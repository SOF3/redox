// Code generated by protoc-gen-go. DO NOT EDIT.
// source: redox.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServerDisconnect_DisconnectReason int32

const (
	ServerDisconnect_UNKNOWN        ServerDisconnect_DisconnectReason = 0
	ServerDisconnect_SHUTDOWN       ServerDisconnect_DisconnectReason = 1
	ServerDisconnect_INVALID_LOGIN  ServerDisconnect_DisconnectReason = 2
	ServerDisconnect_DUPLICATE_NODE ServerDisconnect_DisconnectReason = 3
)

var ServerDisconnect_DisconnectReason_name = map[int32]string{
	0: "UNKNOWN",
	1: "SHUTDOWN",
	2: "INVALID_LOGIN",
	3: "DUPLICATE_NODE",
}
var ServerDisconnect_DisconnectReason_value = map[string]int32{
	"UNKNOWN":        0,
	"SHUTDOWN":       1,
	"INVALID_LOGIN":  2,
	"DUPLICATE_NODE": 3,
}

func (x ServerDisconnect_DisconnectReason) String() string {
	return proto.EnumName(ServerDisconnect_DisconnectReason_name, int32(x))
}
func (ServerDisconnect_DisconnectReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{5, 0}
}

// In the redox protocol, ping is always sent from nodes and pong is always sent from Central.
type Ping struct {
	NodeTime             float64  `protobuf:"fixed64,1,opt,name=node_time,json=nodeTime,proto3" json:"node_time,omitempty"`
	Ref                  uint32   `protobuf:"varint,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{0}
}
func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (dst *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(dst, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetNodeTime() float64 {
	if m != nil {
		return m.NodeTime
	}
	return 0
}

func (m *Ping) GetRef() uint32 {
	if m != nil {
		return m.Ref
	}
	return 0
}

type Pong struct {
	CentralTime          float64  `protobuf:"fixed64,1,opt,name=central_time,json=centralTime,proto3" json:"central_time,omitempty"`
	Ref                  uint32   `protobuf:"varint,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{1}
}
func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (dst *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(dst, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetCentralTime() float64 {
	if m != nil {
		return m.CentralTime
	}
	return 0
}

func (m *Pong) GetRef() uint32 {
	if m != nil {
		return m.Ref
	}
	return 0
}

type ClientHandshake struct {
	Version              uint32   `protobuf:"fixed32,1,opt,name=version,proto3" json:"version,omitempty"`
	NodeId               string   `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	NodeTimeI            uint64   `protobuf:"varint,4,opt,name=node_time_i,json=nodeTimeI,proto3" json:"node_time_i,omitempty"`
	NodeTimeD            float64  `protobuf:"fixed64,5,opt,name=node_time_d,json=nodeTimeD,proto3" json:"node_time_d,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientHandshake) Reset()         { *m = ClientHandshake{} }
func (m *ClientHandshake) String() string { return proto.CompactTextString(m) }
func (*ClientHandshake) ProtoMessage()    {}
func (*ClientHandshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{2}
}
func (m *ClientHandshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientHandshake.Unmarshal(m, b)
}
func (m *ClientHandshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientHandshake.Marshal(b, m, deterministic)
}
func (dst *ClientHandshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientHandshake.Merge(dst, src)
}
func (m *ClientHandshake) XXX_Size() int {
	return xxx_messageInfo_ClientHandshake.Size(m)
}
func (m *ClientHandshake) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientHandshake.DiscardUnknown(m)
}

var xxx_messageInfo_ClientHandshake proto.InternalMessageInfo

func (m *ClientHandshake) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ClientHandshake) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ClientHandshake) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ClientHandshake) GetNodeTimeI() uint64 {
	if m != nil {
		return m.NodeTimeI
	}
	return 0
}

func (m *ClientHandshake) GetNodeTimeD() float64 {
	if m != nil {
		return m.NodeTimeD
	}
	return 0
}

type ServerHandshake struct {
	//    string config = 1; // TODO: improve config structure
	Deps                 []string `protobuf:"bytes,2,rep,name=deps,proto3" json:"deps,omitempty"`
	CentralTimeI         uint64   `protobuf:"varint,4,opt,name=central_time_i,json=centralTimeI,proto3" json:"central_time_i,omitempty"`
	CentralTimeD         uint64   `protobuf:"varint,5,opt,name=central_time_d,json=centralTimeD,proto3" json:"central_time_d,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerHandshake) Reset()         { *m = ServerHandshake{} }
func (m *ServerHandshake) String() string { return proto.CompactTextString(m) }
func (*ServerHandshake) ProtoMessage()    {}
func (*ServerHandshake) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{3}
}
func (m *ServerHandshake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerHandshake.Unmarshal(m, b)
}
func (m *ServerHandshake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerHandshake.Marshal(b, m, deterministic)
}
func (dst *ServerHandshake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerHandshake.Merge(dst, src)
}
func (m *ServerHandshake) XXX_Size() int {
	return xxx_messageInfo_ServerHandshake.Size(m)
}
func (m *ServerHandshake) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerHandshake.DiscardUnknown(m)
}

var xxx_messageInfo_ServerHandshake proto.InternalMessageInfo

func (m *ServerHandshake) GetDeps() []string {
	if m != nil {
		return m.Deps
	}
	return nil
}

func (m *ServerHandshake) GetCentralTimeI() uint64 {
	if m != nil {
		return m.CentralTimeI
	}
	return 0
}

func (m *ServerHandshake) GetCentralTimeD() uint64 {
	if m != nil {
		return m.CentralTimeD
	}
	return 0
}

type ClientDisconnect struct {
	Remark               string   `protobuf:"bytes,1,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientDisconnect) Reset()         { *m = ClientDisconnect{} }
func (m *ClientDisconnect) String() string { return proto.CompactTextString(m) }
func (*ClientDisconnect) ProtoMessage()    {}
func (*ClientDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{4}
}
func (m *ClientDisconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientDisconnect.Unmarshal(m, b)
}
func (m *ClientDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientDisconnect.Marshal(b, m, deterministic)
}
func (dst *ClientDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientDisconnect.Merge(dst, src)
}
func (m *ClientDisconnect) XXX_Size() int {
	return xxx_messageInfo_ClientDisconnect.Size(m)
}
func (m *ClientDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_ClientDisconnect proto.InternalMessageInfo

func (m *ClientDisconnect) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type ServerDisconnect struct {
	Reconnect            bool                              `protobuf:"varint,1,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
	Reason               ServerDisconnect_DisconnectReason `protobuf:"varint,2,opt,name=reason,proto3,enum=redox.ServerDisconnect_DisconnectReason" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ServerDisconnect) Reset()         { *m = ServerDisconnect{} }
func (m *ServerDisconnect) String() string { return proto.CompactTextString(m) }
func (*ServerDisconnect) ProtoMessage()    {}
func (*ServerDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{5}
}
func (m *ServerDisconnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerDisconnect.Unmarshal(m, b)
}
func (m *ServerDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerDisconnect.Marshal(b, m, deterministic)
}
func (dst *ServerDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerDisconnect.Merge(dst, src)
}
func (m *ServerDisconnect) XXX_Size() int {
	return xxx_messageInfo_ServerDisconnect.Size(m)
}
func (m *ServerDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_ServerDisconnect proto.InternalMessageInfo

func (m *ServerDisconnect) GetReconnect() bool {
	if m != nil {
		return m.Reconnect
	}
	return false
}

func (m *ServerDisconnect) GetReason() ServerDisconnect_DisconnectReason {
	if m != nil {
		return m.Reason
	}
	return ServerDisconnect_UNKNOWN
}

// Events
// An event is first submitted by a node to the Central. For each other node, Central first determines whether the node should receive the event broadcast using the event flags. The event timestamp is then adjusted to match the Ping.node_tick of the receiving node.
type EventBroadcast struct {
	DuringTick           uint64   `protobuf:"varint,1,opt,name=during_tick,json=duringTick,proto3" json:"during_tick,omitempty"`
	NodeId               string   `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Flag                 []string `protobuf:"bytes,4,rep,name=flag,proto3" json:"flag,omitempty"`
	Data                 *any.Any `protobuf:"bytes,15,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventBroadcast) Reset()         { *m = EventBroadcast{} }
func (m *EventBroadcast) String() string { return proto.CompactTextString(m) }
func (*EventBroadcast) ProtoMessage()    {}
func (*EventBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{6}
}
func (m *EventBroadcast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventBroadcast.Unmarshal(m, b)
}
func (m *EventBroadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventBroadcast.Marshal(b, m, deterministic)
}
func (dst *EventBroadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventBroadcast.Merge(dst, src)
}
func (m *EventBroadcast) XXX_Size() int {
	return xxx_messageInfo_EventBroadcast.Size(m)
}
func (m *EventBroadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_EventBroadcast.DiscardUnknown(m)
}

var xxx_messageInfo_EventBroadcast proto.InternalMessageInfo

func (m *EventBroadcast) GetDuringTick() uint64 {
	if m != nil {
		return m.DuringTick
	}
	return 0
}

func (m *EventBroadcast) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *EventBroadcast) GetFlag() []string {
	if m != nil {
		return m.Flag
	}
	return nil
}

func (m *EventBroadcast) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

// PrivateEdgeCreation notifies Central that an edge between two servers was created, and Central does not need to pass any information from the other node.
// To make edge creation foolproof, the PrivateEdgeCreation packet for each pair of nodes must only be sent from exactly one of the nodes.
type PrivateEdgeCreation struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivateEdgeCreation) Reset()         { *m = PrivateEdgeCreation{} }
func (m *PrivateEdgeCreation) String() string { return proto.CompactTextString(m) }
func (*PrivateEdgeCreation) ProtoMessage()    {}
func (*PrivateEdgeCreation) Descriptor() ([]byte, []int) {
	return fileDescriptor_redox_ee659f88f3c8f928, []int{7}
}
func (m *PrivateEdgeCreation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrivateEdgeCreation.Unmarshal(m, b)
}
func (m *PrivateEdgeCreation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrivateEdgeCreation.Marshal(b, m, deterministic)
}
func (dst *PrivateEdgeCreation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateEdgeCreation.Merge(dst, src)
}
func (m *PrivateEdgeCreation) XXX_Size() int {
	return xxx_messageInfo_PrivateEdgeCreation.Size(m)
}
func (m *PrivateEdgeCreation) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateEdgeCreation.DiscardUnknown(m)
}

var xxx_messageInfo_PrivateEdgeCreation proto.InternalMessageInfo

func (m *PrivateEdgeCreation) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func init() {
	proto.RegisterType((*Ping)(nil), "redox.Ping")
	proto.RegisterType((*Pong)(nil), "redox.Pong")
	proto.RegisterType((*ClientHandshake)(nil), "redox.ClientHandshake")
	proto.RegisterType((*ServerHandshake)(nil), "redox.ServerHandshake")
	proto.RegisterType((*ClientDisconnect)(nil), "redox.ClientDisconnect")
	proto.RegisterType((*ServerDisconnect)(nil), "redox.ServerDisconnect")
	proto.RegisterType((*EventBroadcast)(nil), "redox.EventBroadcast")
	proto.RegisterType((*PrivateEdgeCreation)(nil), "redox.PrivateEdgeCreation")
	proto.RegisterEnum("redox.ServerDisconnect_DisconnectReason", ServerDisconnect_DisconnectReason_name, ServerDisconnect_DisconnectReason_value)
}

func init() { proto.RegisterFile("redox.proto", fileDescriptor_redox_ee659f88f3c8f928) }

var fileDescriptor_redox_ee659f88f3c8f928 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x26, 0x6b, 0xd6, 0x36, 0x27, 0x5d, 0x1b, 0x0c, 0x82, 0x30, 0x10, 0x94, 0x88, 0x8b, 0xc0,
	0x45, 0x26, 0x0d, 0x71, 0xc5, 0x0d, 0x5d, 0x53, 0xb1, 0x88, 0x2a, 0xad, 0xbc, 0x16, 0x24, 0x6e,
	0x2a, 0x2f, 0x76, 0x83, 0xd5, 0xd6, 0x2e, 0x4e, 0x56, 0xd8, 0x1b, 0xf0, 0x18, 0x3c, 0x0e, 0x8f,
	0x85, 0xe2, 0xf4, 0x77, 0x88, 0xbb, 0xef, 0x3b, 0xe7, 0xf3, 0xe7, 0x73, 0x8e, 0x8f, 0xc1, 0x56,
	0x8c, 0xca, 0x9f, 0xc1, 0x52, 0xc9, 0x5c, 0xa2, 0x63, 0x4d, 0x4e, 0x9f, 0xa4, 0x52, 0xa6, 0x73,
	0x76, 0xa6, 0x83, 0xd7, 0x37, 0xd3, 0x33, 0x22, 0x6e, 0x4b, 0x85, 0xf7, 0x0e, 0xcc, 0x21, 0x17,
	0x29, 0x7a, 0x0a, 0x96, 0x90, 0x94, 0x4d, 0x72, 0xbe, 0x60, 0xae, 0xd1, 0x36, 0x7c, 0x03, 0xd7,
	0x8b, 0xc0, 0x88, 0x2f, 0x18, 0x72, 0xa0, 0xa2, 0xd8, 0xd4, 0x3d, 0x6a, 0x1b, 0xfe, 0x09, 0x2e,
	0xa0, 0xf7, 0x1e, 0xcc, 0xa1, 0x14, 0x29, 0x7a, 0x09, 0x8d, 0x84, 0x89, 0x5c, 0x91, 0xf9, 0xfe,
	0x49, 0x7b, 0x1d, 0xfb, 0xcf, 0xe1, 0xdf, 0x06, 0xb4, 0xba, 0x73, 0xce, 0x44, 0x7e, 0x49, 0x04,
	0xcd, 0xbe, 0x91, 0x19, 0x43, 0x2e, 0xd4, 0x56, 0x4c, 0x65, 0x5c, 0x0a, 0xed, 0x51, 0xc3, 0x1b,
	0x8a, 0x1e, 0x43, 0x4d, 0x57, 0xc6, 0xa9, 0xf6, 0xb0, 0x70, 0xb5, 0xa0, 0x11, 0x45, 0xa7, 0x50,
	0x5f, 0x92, 0x2c, 0xfb, 0x21, 0x15, 0x75, 0x2b, 0x3a, 0xb3, 0xe5, 0xe8, 0x39, 0xd8, 0xdb, 0x76,
	0x26, 0xdc, 0x35, 0xdb, 0x86, 0x6f, 0x62, 0x6b, 0xd3, 0x50, 0x74, 0x98, 0xa7, 0xee, 0xb1, 0x2e,
	0x7b, 0x9b, 0x0f, 0xbd, 0xef, 0xd0, 0xba, 0x62, 0x6a, 0xc5, 0xd4, 0xae, 0x42, 0x04, 0x26, 0x65,
	0xcb, 0xcc, 0x3d, 0x6a, 0x57, 0x7c, 0x0b, 0x6b, 0x8c, 0x5e, 0x41, 0x73, 0xbf, 0xfd, 0xed, 0x4d,
	0x8d, 0xbd, 0x01, 0x44, 0xff, 0xa8, 0xca, 0xfb, 0x0e, 0x55, 0xa1, 0xf7, 0x06, 0x9c, 0x72, 0x28,
	0x21, 0xcf, 0x12, 0x29, 0x04, 0x4b, 0x72, 0xf4, 0x08, 0xaa, 0x8a, 0x2d, 0x88, 0x9a, 0xe9, 0xa1,
	0x58, 0x78, 0xcd, 0xbc, 0x3f, 0x06, 0x38, 0x65, 0x7d, 0x7b, 0xe2, 0x67, 0x60, 0x29, 0xb6, 0x26,
	0x5a, 0x5f, 0xc7, 0xbb, 0x00, 0xfa, 0x50, 0x58, 0x91, 0x4c, 0x0a, 0x3d, 0xc5, 0xe6, 0xb9, 0x1f,
	0x94, 0x8b, 0x72, 0xd7, 0x26, 0xd8, 0x41, 0xac, 0xf5, 0x78, 0x7d, 0xce, 0x1b, 0x81, 0x73, 0x37,
	0x87, 0x6c, 0xa8, 0x8d, 0xe3, 0x4f, 0xf1, 0xe0, 0x4b, 0xec, 0xdc, 0x43, 0x0d, 0xa8, 0x5f, 0x5d,
	0x8e, 0x47, 0x61, 0xc1, 0x0c, 0x74, 0x1f, 0x4e, 0xa2, 0xf8, 0x73, 0xa7, 0x1f, 0x85, 0x93, 0xfe,
	0xe0, 0x63, 0x14, 0x3b, 0x47, 0x08, 0x41, 0x33, 0x1c, 0x0f, 0xfb, 0x51, 0xb7, 0x33, 0xea, 0x4d,
	0xe2, 0x41, 0xd8, 0x73, 0x2a, 0xde, 0x2f, 0x03, 0x9a, 0xbd, 0x15, 0x13, 0xf9, 0x85, 0x92, 0x84,
	0x26, 0x24, 0xcb, 0xd1, 0x0b, 0xb0, 0xe9, 0x8d, 0xe2, 0x22, 0x9d, 0xe4, 0x3c, 0x29, 0x5b, 0x37,
	0x31, 0x94, 0xa1, 0x11, 0x4f, 0x66, 0xfb, 0x2b, 0x51, 0x39, 0x58, 0x09, 0x04, 0xe6, 0x74, 0x4e,
	0x52, 0xd7, 0x2c, 0xdf, 0xa8, 0xc0, 0xc8, 0x07, 0x93, 0x92, 0x9c, 0xb8, 0xad, 0xb6, 0xe1, 0xdb,
	0xe7, 0x0f, 0x83, 0xf2, 0x2f, 0x04, 0x9b, 0xbf, 0x10, 0x74, 0xc4, 0x2d, 0xd6, 0x0a, 0xef, 0x35,
	0x3c, 0x18, 0x2a, 0xbe, 0x22, 0x39, 0xeb, 0xd1, 0x94, 0x75, 0x15, 0x23, 0x79, 0xb1, 0x80, 0x08,
	0xcc, 0xc2, 0x7e, 0xfd, 0x04, 0x1a, 0x5f, 0xc0, 0xd7, 0xba, 0x36, 0x48, 0xe4, 0xfc, 0xba, 0xaa,
	0xd1, 0xdb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x9b, 0x0d, 0x0e, 0x7a, 0x03, 0x00, 0x00,
}
